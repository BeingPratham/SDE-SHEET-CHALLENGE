bool isPalindrome(string &s, int start, int end){
    while(start<=end){
        if(s[start]!=s[end]){
            return false;
        }
        start++;
        end--;
    }
    return true;
}
void f(int ind, string &s, vector<vector<string>> &ans, vector<string> &ds){
    if(ind==s.size()){
        ans.push_back(ds);
        return;
    }
    for(int i = ind;i<s.size();i++){
        if(isPalindrome(s,ind,i)){
            ds.push_back(s.substr(ind,i-ind+1));
            f(i+1,s,ans,ds);
            ds.pop_back();
        }
    }
}
vector<vector<string>> partition(string &s) 
{
    // Write your code here.
    vector<vector<string>> ans;
    vector<string> ds;
    f(0,s,ans,ds);
    return ans;
}
